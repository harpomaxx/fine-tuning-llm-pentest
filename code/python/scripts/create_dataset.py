import json
import argparse

def chunk_text(text, length, overlap):
    # Split text into chunks of specified length with overlap
    chunks = []
    i = 0
    while i < len(text):
        chunks.append(text[i:i+length])
        i += length - overlap  # Move the starting index by "length minus overlap"
    return chunks

def main():
    parser = argparse.ArgumentParser(description='Convert text file to JSON with overlapping chunks.')
    parser.add_argument('--input_file', help='Path to the input text file')
    parser.add_argument('--output_file', help='Path to the output JSON file')
    parser.add_argument('--overlap', type=int, default=50, help='Number of overlapping characters between chunks')
    parser.add_argument('--chunk_size', type=int, default=200, help='Size of chunks')
    args = parser.parse_args()

    # Step 1: Read the text file
    with open(args.input_file, 'r') as f:
        content = f.read()
    
    # Step 2: Break the text into overlapping chunks
    chunks = chunk_text(content, args.chunk_size, args.overlap)

    # Step 3: Construct the JSON structure with multiple `text` entries
    json_structure = [{"text": chunk} for chunk in chunks]

    # Step 4: Write the JSON structure to the specified output file
    with open(args.output_file, 'w') as f:
        json.dump(json_structure, f, indent=4)

if __name__ == "__main__":
    main()
