import json
import argparse

def chunk_text_by_words(text, num_words, overlap):
    words = text.split()  # Split text into words
    chunks = []
    i = 0
    while i < len(words):
        end = i + num_words
        chunks.append(' '.join(words[i:end]))
        i += num_words - overlap  # Move the starting index by "num_words minus overlap"
    return chunks

def main():
    parser = argparse.ArgumentParser(description='Convert text file to JSON with overlapping word chunks.')
    parser.add_argument('--input_file', help='Path to the input text file')
    parser.add_argument('--output_file', help='Path to the output JSON file')
    parser.add_argument('--words', type=int, default=50, help='Number of words per chunk')
    parser.add_argument('--overlap', type=int, default=0, help='Number of overlapping words between chunks')
    args = parser.parse_args()

    # Step 1: Read the text file
    with open(args.input_file, 'r') as f:
        content = f.read()
    
    # Step 2: Break the text into overlapping word chunks
    chunks = chunk_text_by_words(content, args.words, args.overlap)

    # Step 3: Construct the JSON structure with multiple `text` entries
    json_structure = [{"text": chunk} for chunk in chunks]

    # Step 4: Write the JSON structure to the specified output file
    with open(args.output_file, 'w') as f:
        json.dump(json_structure, f, indent=4)

if __name__ == "__main__":
    main()
